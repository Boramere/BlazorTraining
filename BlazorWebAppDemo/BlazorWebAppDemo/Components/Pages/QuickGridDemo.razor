@page "/QuickGridDemo"
@using BlazorWebAppDemo.Services
@using Microsoft.AspNetCore.Components.QuickGrid
@inject SuperheroData superHeroData

<h3>QuickGridDemo</h3>

<QuickGrid Items="@FilteredItems" Pagination="@pagination">
    <PropertyColumn Property="@(c => c.Name)" Sortable="true">
        <ColumnOptions>
            <div class="search-box">
                <input type="search" autofocus @bind="nameFilter" @bind:event="oninput" placeholder="Name..." />
            </div>
        </ColumnOptions>
    </PropertyColumn>
    <PropertyColumn Property="@(c => c.RealName)" Sortable="true">
        <ColumnOptions>
            <div class="search-box">
                <input type="search" autofocus @bind="realNameFilter" @bind:event="oninput" placeholder="Real Name..." />
            </div>
        </ColumnOptions>
    </PropertyColumn>
    <PropertyColumn Property="@(c => c.Powers)" Sortable="true">
        <ColumnOptions>
            <div class="search-box">
                <input type="search" autofocus @bind="powerFilter" @bind:event="oninput" placeholder="Powers..." />
            </div>
        </ColumnOptions>
    </PropertyColumn>
</QuickGrid>

<Paginator State="@pagination" />

@code {
    IQueryable<Superhero>? items;
    string nameFilter = string.Empty;
    string realNameFilter = string.Empty;
    string powerFilter = string.Empty;
    PaginationState pagination = new PaginationState { ItemsPerPage = 15 };

    IQueryable<Superhero>? FilteredItems => items?.Where(x =>
        x.Name.Contains(nameFilter, StringComparison.CurrentCultureIgnoreCase)
        && x.RealName.Contains(realNameFilter, StringComparison.CurrentCultureIgnoreCase)
        && x.Powers.Contains(powerFilter, StringComparison.CurrentCultureIgnoreCase)
    );

    protected override void OnInitialized()
    {
        items = superHeroData.GetData().AsQueryable();
    }

}
